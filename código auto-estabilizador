// Obtém valores de guinada, inclinação e rolagem
#ifdef OUTPUT_READABLE_YAWPITCHROLL
    mpu. dmpGetQuaternion ( & q, fifoBuffer ) ;
    mpu. dmpGetGravity ( & gravidade, & q ) ;
    mpu. dmpGetYawPitchRoll ( ypr, & q, & gravity ) ;
    // Yaw, Pitch, Roll valores - Radians para graus
    ypr [ 0 ] = ypr [ 0 ] * 180 / M_PI;
    ypr [ 1 ] = ypr [ 1 ] * 180 / M_PI;
    ypr [ 2 ] = ypr [ 2 ] * 180 / M_PI;
    
    // Ignora 300 leituras (processo de auto-calibração)
    if ( j <= 300 ) {  
      correto = ypr [ 0 ] ; // Yaw começa em valor aleatório, então nós capturamos o último valor depois de 300 leituras
      j ++;
    }
    // Depois de 300 leituras
    else { 
      ypr [ 0 ] = ypr [ 0 ] - correto; // Ajuste o Yaw para 0 graus - subtraia o último valor Yaw aleatório do valor actual para fazer o Yaw 0 graus
      // Mapeie os valores do sensor MPU6050 de -90 a 90 para valores suportáveis ​​para o servo controle de 0 a 180
      int servo0Value = map ( ypr [ 0 ] , - 90 , 90 , 0 , 180 ) ;
      int servo1Value = map ( ypr [ 1 ] , - 90 , 90 , 0 , 180 ) ;
      int servo2Value = map ( ypr [ 2 ] , - 90 , 90 , 180 , 0 ) ;
      
      // Controle os servos de acordo com a orientação MPU6050
      servo0. write ( servo0Value ) ;
      servo1. write ( servo1Value ) ;
      servo2. write ( servo2Value ) ;
    }
#fim se
// Guinada, Inclinação, Rolagem valores - Radianos para graus
    ypr [ 0 ] = ypr [ 0 ] * 180 / M_PI;
    ypr [ 1 ] = ypr [ 1 ] * 180 / M_PI;
    ypr [ 2 ] = ypr [ 2 ] * 180 / M_PI;
    // Ignora 300 leituras (processo de auto-calibração)
    if ( j <= 300 ) {  
      correct = ypr [ 0 ] ; // Guinada começa em valor aleatório, então nós capturamos o último valor depois de 300 leituras
      j ++;
    }
    // Depois de 300 leituras
    else { 
      ypr [ 0 ] = ypr [ 0 ] - correto; // Ajuste o Yaw para 0 graus - subtraia o último valor Yaw aleatório do valor actual para fazer o Yaw 0 graus
      // Mapeie os valores do sensor MPU6050 de -90 a 90 para valores suportáveis ​​para o servo controle de 0 a 180
      int servo0Value = map ( ypr [ 0 ] , - 90 , 90 , 0 , 180 ) ;
      int servo1Value = map ( ypr [ 1 ] , - 90 , 90 , 0 , 180 ) ;
      int servo2Value = map ( ypr [ 2 ] , - 90 , 90 , 180 , 0 ) ;
      
      // Controle os servos de acordo com a orientação MPU6050
      servo0. write ( servo0Value ) ;
      servo1. write ( servo1Value ) ;
      servo2. write ( servo2Value ) ;
    }
